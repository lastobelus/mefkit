name: CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:5-alpine
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install ruby using .rubyversion
        uses: ruby/setup-ruby@v1

      - name: Install PostgreSQL 11 client (RADAR remove after march 2020)
        run: |
          sudo apt-get -yqq install libpq-dev

      - name: Read node version from .nvmrc
        run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
        id: nvm
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Setup gem cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: bundle-use-ruby-${{ runner.os }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            bundle-use-ruby-${{ runner.os }}-

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup yarn cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Bundle install and setup database
        env:
          RAILS_ENV: test
        run: |
          bundle install --jobs 4 --retry 3 --without development

      - name: Setup database
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          cp config/database.yml.github-actions config/database.yml
          bundle exec rails db:prepare

      - name: Run Specs
        env:
          RAILS_ENV: test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: |
          bundle exec rspec
