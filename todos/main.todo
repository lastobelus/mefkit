# To Do

Goals:
  ☐ be able to deploy the walking skeleton of an app idea from a 1-2 hour storymapping session in less than 30 minutes
  ☐ have a CI'd and CD'd rails starter app that is always up-to-date (automatic CI/CD of gem, rails, ruby, node upgrades)
  ☐ rails app integration with github, with issue creation, action & screenshot recording

Base:
  Setup:
    ✔ add vscode settings @done(2019-05-18 17:35)
    ✔ add todos @done(2019-05-18 17:35)

  Specs:
    ☐ add high voltage and an about Mefkit page, then add a request spec for about mefkit
    ☐ CI with request spec
    ☐ add devise
    ☐ devise request specs, with CI
    ☐ action cable setup
    ☐ sidekiq setup
    ☐ cypress sidekiq hello world 
    ☐ cypress setup
    ☐ action cable badge hello world with cypress test
    ☐ cypress CI

  Static Pages:
    ☐ add high-voltage

  Users:
    ☐ devise setup
    ☐ administrate setup
    ☐ login with google
    ☐ login with github
    ☐ login with facebook

  GUI/CSS:
    ☐ choose a powerful widget platform
      ☐ must be themeable
      ☐ must be built on a standard
      ☐ mdbootstrap?
    ☐ personalize the styles/colors
    ☐ add trix
    ☐ choose a datepicker
    ☐ evaluate https://flatpickr.js.org (see https://github.com/adrienpoly/rails_stimulus_flatpickr)

  Templates/Components:
    do evil martians tutorial
    evaluate komposable/komponent
    consider forking slim and addding components
      `app-page#main.compact obj=@object`
      `  @app-nav.dark.skinny`
      `  @app-sidebar`
      `    = product_list`
      `  p Some Stuff`
      `  
      - this will be like `=render 'components/app-page', obj: @object`, but will set the root element id to main, and merge 'compact' into the root element css class. It expects there to be a child component `app-nav` to which it will merge css classes 'dark' and 'skinny'. It expects a child component `app-sidebar` to which it will yield `product_list`. It will yield `p Some Stuff` into the `app-page`
  Javascript:
    ☐ javascript setup. improvement on sp system
    ☐ install and learn stimulus
      ✔ install by generating new app with stimulus & copying bits @done(2019-05-28 11:26)
      ☐ https://blog.capsens.eu/stimulusjs-on-rails-101-f22a0818dff8
    ☐ review actioncable usage in sp-fulfillment and create some abstractions
    ☐ base has working actioncable OOB
    ☐ learn to use typescript
      ☐ bundle exec rails webpacker:install:typescript

  Caching, Sessions, Redis:
    ☐ install hiredis
    ☐ ensure redis setup working (specs)
    ☐ use redis for cache store (https://medium.com/@kirill_shevch/configuration-cache-and-rails-session-store-with-redis-b3ce6f64d1fc)
    ☐ use redis for cookie store
  Sidekiq:
    ☐ sidekiq setup based on sp
    ☐ useful abstractions & plugins
    ☐ worker generators
    ☐ base has working sidekiq OOB

  Generators:
    ☐ generator for index/edit/create/destroy (no show) scaffold
    ☐ generator for index with editable (bip) fields
    ☐ generator for popover editor in list
    ☐ generator for popover new in list

  Suspenders:
    ☐ review suspenders and pull the pieces I want

  Living Style Guide:

  Deployment:
    ☐ research economical alternatives to heroku for hosting multiple rails experiments, and choose one
    ☐ invest $50/month on hosting & ensure CI/CD of the base on that hosting

  Development: (2)
    investigate and use [Overmind](https://github.com/DarthSim/overmind)